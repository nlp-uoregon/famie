{"project_name": "test", "example_id": 0, "text": "---"}
{"project_name": "test", "example_id": 1, "text": "layout: default"}
{"project_name": "test", "example_id": 2, "text": "title: Generating proceedings for the ACL Anthology"}
{"project_name": "test", "example_id": 3, "text": "---"}
{"project_name": "test", "example_id": 4, "text": "The ACL Anthology requires a particular file layout in order to ingest material (described in Step 3 below)."}
{"project_name": "test", "example_id": 5, "text": "This README describes how to produce this layout from files exported from STARTv2 or EasyChair, or manually."}
{"project_name": "test", "example_id": 6, "text": "## 1. Installation and setup"}
{"project_name": "test", "example_id": 7, "text": "First, clone the official repository:"}
{"project_name": "test", "example_id": 8, "text": "git clone https://github.com/acl-org/ACLPUB"}
{"project_name": "test", "example_id": 9, "text": "The scripts you will be using are in the subdirectory `ACLPUB/anthologize`."}
{"project_name": "test", "example_id": 10, "text": "Below, we assume that you have this directory in your `PATH`; if not, you'll need to provide full pathnames to scripts."}
{"project_name": "test", "example_id": 11, "text": "## 2. Assembling the data"}
{"project_name": "test", "example_id": 12, "text": "If you are using:"}
{"project_name": "test", "example_id": 13, "text": "- STARTv2: follow the instructions in Step 2(a), then 2(c)."}
{"project_name": "test", "example_id": 14, "text": "- EasyChair: follow the instructions in Step 2(b), then 2(c)."}
{"project_name": "test", "example_id": 15, "text": "- Another system: you will need to manually arrange your files into the layout described in Step 2(c), then continue to Step 2."}
{"project_name": "test", "example_id": 16, "text": "### 2a. Instructions for users of Softconf's STARTv2"}
{"project_name": "test", "example_id": 17, "text": "Create a file called `start_urls.txt` that contains a list of the START urls for all volumes associated with the conference."}
{"project_name": "test", "example_id": 18, "text": "As an example, the `start_urls.txt` file in the current directory contains many of the NAACL 2015 volumes:"}
{"project_name": "test", "example_id": 19, "text": "https://www.softconf.com/naacl2015/papers"}
{"project_name": "test", "example_id": 20, "text": "https://www.softconf.com/naacl2015/shortpapers"}
{"project_name": "test", "example_id": 21, "text": "https://www.softconf.com/naacl2015/srw"}
{"project_name": "test", "example_id": 22, "text": "https://www.softconf.com/naacl2015/tutorials"}
{"project_name": "test", "example_id": 23, "text": "https://www.softconf.com/naacl2015/demos"}
{"project_name": "test", "example_id": 24, "text": "https://www.softconf.com/naacl2015/WMT14"}
{"project_name": "test", "example_id": 25, "text": "https://www.softconf.com/naacl2015/BioNLP"}
{"project_name": "test", "example_id": 26, "text": "https://www.softconf.com/naacl2015/BEA9"}
{"project_name": "test", "example_id": 27, "text": "Next, download all the tarballs."}
{"project_name": "test", "example_id": 28, "text": "You can use the provided script:"}
{"project_name": "test", "example_id": 29, "text": "bin/download-proceedings.sh start_urls.txt"}
{"project_name": "test", "example_id": 30, "text": "This automatic downloading is provided as a convenience; you could also do it manually (and may need to do so, if there are workshops that assemble their proceedings outside of START)."}
{"project_name": "test", "example_id": 31, "text": "This downloads each track/workshop's proceedings."}
{"project_name": "test", "example_id": 32, "text": "The result should be something like the file structure in Step 2(c)."}
{"project_name": "test", "example_id": 33, "text": "### 2b. Instructions for users of EasyChair"}
{"project_name": "test", "example_id": 34, "text": "If you are using EasyChair, please see the [instructions in the easy2acl repository](https://github.com/acl-org/easy2acl/blob/master/README.md)."}
{"project_name": "test", "example_id": 35, "text": "The documentation there describes how to assemble the Easychair output and run the `easy2acl.py` script in order to generate a layout similar to what START exports."}
{"project_name": "test", "example_id": 36, "text": "That code helps you produce a file format similar to Step 2(c)."}
{"project_name": "test", "example_id": 37, "text": "### 2c. The file format"}
{"project_name": "test", "example_id": 38, "text": "The ACLPUB scripts work from a conference organized in the following file format."}
{"project_name": "test", "example_id": 39, "text": "A conference is one or more main conference volumes, along with zero or more workshop volumes."}
{"project_name": "test", "example_id": 40, "text": "Each volume gets its own top-level directory underneath `data/`."}
{"project_name": "test", "example_id": 41, "text": "For example:"}
{"project_name": "test", "example_id": 42, "text": "```"}
{"project_name": "test", "example_id": 43, "text": "data/"}
{"project_name": "test", "example_id": 44, "text": "naacl2018-longpapers/"}
{"project_name": "test", "example_id": 45, "text": "proceedings/"}
{"project_name": "test", "example_id": 46, "text": "meta"}
{"project_name": "test", "example_id": 47, "text": "cdrom/"}
{"project_name": "test", "example_id": 48, "text": "..."}
{"project_name": "test", "example_id": 49, "text": "naacl2018-shortpapers/"}
{"project_name": "test", "example_id": 50, "text": "proceedings/"}
{"project_name": "test", "example_id": 51, "text": "meta"}
{"project_name": "test", "example_id": 52, "text": "cdrom/"}
{"project_name": "test", "example_id": 53, "text": "..."}
{"project_name": "test", "example_id": 54, "text": "SemEval-2018/"}
{"project_name": "test", "example_id": 55, "text": "proceedings/"}
{"project_name": "test", "example_id": 56, "text": "meta"}
{"project_name": "test", "example_id": 57, "text": "cdrom/"}
{"project_name": "test", "example_id": 58, "text": "..."}
{"project_name": "test", "example_id": 59, "text": "starsem/"}
{"project_name": "test", "example_id": 60, "text": "proceedings/"}
{"project_name": "test", "example_id": 61, "text": "meta"}
{"project_name": "test", "example_id": 62, "text": "cdrom/"}
{"project_name": "test", "example_id": 63, "text": "..."}
{"project_name": "test", "example_id": 64, "text": "```"}
{"project_name": "test", "example_id": 65, "text": "Looking within each of these `proceedings` directories, we see the following format, which is the STARTv2 export format for a single volume:"}
{"project_name": "test", "example_id": 66, "text": "```"}
{"project_name": "test", "example_id": 67, "text": "proceedings/"}
{"project_name": "test", "example_id": 68, "text": "meta                               Information about the conference"}
{"project_name": "test", "example_id": 69, "text": "cdrom/"}
{"project_name": "test", "example_id": 70, "text": "semeval-2018.bib                 BibTeX file containing entries for all papers"}
{"project_name": "test", "example_id": 71, "text": "semeval-2018.pdf                 PDF of whole proceedings"}
{"project_name": "test", "example_id": 72, "text": "additional/"}
{"project_name": "test", "example_id": 73, "text": "2018.semeval-1.1_Software.tgz  Software attached to paper 1"}
{"project_name": "test", "example_id": 74, "text": "2018.semeval-1.3_Dataset.zip   Dataset attached to paper 3"}
{"project_name": "test", "example_id": 75, "text": "2018.semeval-1.3_Note.pdf      Note attached to paper 1003"}
{"project_name": "test", "example_id": 76, "text": "bib/"}
{"project_name": "test", "example_id": 77, "text": "2018.semeval-1.0.bib           BibTeX entry for the whole proceedings volume"}
{"project_name": "test", "example_id": 78, "text": "2018.semeval-1.1.bib           BibTeX entry for paper 1"}
{"project_name": "test", "example_id": 79, "text": "2018.semeval-1.2.bib           etc."}
{"project_name": "test", "example_id": 80, "text": "pdf/"}
{"project_name": "test", "example_id": 81, "text": "2018.semeval-1.0.pdf           PDF of frontmatter"}
{"project_name": "test", "example_id": 82, "text": "2018.semeval-1.1.pdf           PDF for paper 1"}
{"project_name": "test", "example_id": 83, "text": "2018.semeval-1.2.pdf           etc."}
{"project_name": "test", "example_id": 84, "text": "```"}
{"project_name": "test", "example_id": 85, "text": "### The \"meta\" file"}
{"project_name": "test", "example_id": 86, "text": "Each `meta` file is just a collection of key/value pairs, one per line, with the key and value separated by whitespace."}
{"project_name": "test", "example_id": 87, "text": "The lines of interest are (using `SemEval` as an example):"}
{"project_name": "test", "example_id": 88, "text": "```"}
{"project_name": "test", "example_id": 89, "text": "abbrev SemEval"}
{"project_name": "test", "example_id": 90, "text": "volume 1"}
{"project_name": "test", "example_id": 91, "text": "title 12th International Workshop on Semantic Evaluation"}
{"project_name": "test", "example_id": 92, "text": "booktitle Proceedings of the 12th International Workshop on Semantic Evaluation"}
{"project_name": "test", "example_id": 93, "text": "shortbooktitle Proceedings of SemEval"}
{"project_name": "test", "example_id": 94, "text": "month January"}
{"project_name": "test", "example_id": 95, "text": "year 2018"}
{"project_name": "test", "example_id": 96, "text": "sig siglex"}
{"project_name": "test", "example_id": 97, "text": "chairs Marianna Apidianaki"}
{"project_name": "test", "example_id": 98, "text": "chairs Mohammad, Saif M."}
{"project_name": "test", "example_id": 99, "text": "chairs Jonathan May"}
{"project_name": "test", "example_id": 100, "text": "chairs Ekaterina Shutova"}
{"project_name": "test", "example_id": 101, "text": "chairs Steven Bethard"}
{"project_name": "test", "example_id": 102, "text": "chairs Marine Carpuat"}
{"project_name": "test", "example_id": 103, "text": "location Berlin, Germany"}
{"project_name": "test", "example_id": 104, "text": "publisher Association for Computational Lingustics"}
{"project_name": "test", "example_id": 105, "text": "```"}
{"project_name": "test", "example_id": 106, "text": "The following fields are of special importance:"}
{"project_name": "test", "example_id": 107, "text": "- **abbrev**, **year**, and **volume** are used to assemble the [Anthology ID](https://aclanthology.org/info/ids/) in the [ACL Anthology](https://aclanthology.org/)."}
{"project_name": "test", "example_id": 108, "text": "These three constitute the volume ID (e.g., `2018.semeval-1`), which is prefixed to the paper ID to form the complete paper identifiers (e.g., `2018.semeval-1.19` for the 19th paper)."}
{"project_name": "test", "example_id": 109, "text": "- **abbrev** is the venue for this volume."}
{"project_name": "test", "example_id": 110, "text": "It will be lowercased when forming file names, and will appear at `https://aclanthology.org/venues/{abbrev}`."}
{"project_name": "test", "example_id": 111, "text": "It can only contain ASCII letters and numbers ([A-Za-z0-9]+)."}
{"project_name": "test", "example_id": 112, "text": "*A common mistake is to include the year (e.g., SemEval20). Since it is a venue name, it should not contain the year*."}
{"project_name": "test", "example_id": 113, "text": "- **year** is the four-digit year."}
{"project_name": "test", "example_id": 114, "text": "- **volume** is the name of the volume."}
{"project_name": "test", "example_id": 115, "text": "Most workshops have just a single volume, in which case you can just use \"1\"."}
{"project_name": "test", "example_id": 116, "text": "For larger conferences with multiple volumes, you may wish to choose short, informative names (e.g., \"short\" for short papers, \"long\" for long papers, \"srw\" for papers in a Student Research Workshop, etc.)"}
{"project_name": "test", "example_id": 117, "text": "For those using START, these should have been set by publications and book chairs (Publication Console -> ACLPUB -> CDROM)."}
{"project_name": "test", "example_id": 118, "text": "In addition, please ensure that the **chairs** lines are BibTeX-formatted names as above."}
{"project_name": "test", "example_id": 119, "text": "If there are just two names, we can easily format it into BibTeX's \"family name, given name\" format."}
{"project_name": "test", "example_id": 120, "text": "If there are more than three names (e.g., \"Mohammad, Saif M.\"), please format this way yourself."}
{"project_name": "test", "example_id": 121, "text": "Do not add affiliations as these are not used and they complicate parsing."}
{"project_name": "test", "example_id": 122, "text": "**NOTE**: If you are wondering what happened to the `bib_url` field, it is no longer used."}
{"project_name": "test", "example_id": 123, "text": "If it's present in START, you can ignore it."}
{"project_name": "test", "example_id": 124, "text": "## 3. Sanity check"}
{"project_name": "test", "example_id": 125, "text": "After assembling your data to look like Step 2(c), please run the following script, which runs some basic sanity checks that may save you and the Anthology Director some grief."}
{"project_name": "test", "example_id": 126, "text": "./bin/sanity_check.py /path/to/data"}
{"project_name": "test", "example_id": 127, "text": "## 4. Package and send the `data/` directory"}
{"project_name": "test", "example_id": 128, "text": "Package up the anthology directory:"}
{"project_name": "test", "example_id": 129, "text": "tar czvf <conference>_data.tgz data"}
{"project_name": "test", "example_id": 130, "text": "Upload the resulting file (`<conference>_data.tgz`) to a file server or cloud storage (e.g. Google Drive) and email the link to it to the Anthology Director."}
{"project_name": "test", "example_id": 131, "text": "Please do not send the file as an email attachment."}
{"project_name": "test", "example_id": 132, "text": "## Notes on supported attachment formats"}
{"project_name": "test", "example_id": 133, "text": "Current attachment types supported by the Anthology are:"}
{"project_name": "test", "example_id": 134, "text": "+ Dataset"}
{"project_name": "test", "example_id": 135, "text": "+ Note"}
{"project_name": "test", "example_id": 136, "text": "+ Poster"}
{"project_name": "test", "example_id": 137, "text": "+ Presentation"}
{"project_name": "test", "example_id": 138, "text": "+ Software"}
{"project_name": "test", "example_id": 139, "text": "+ Attachment (this is for generic attachments; best to be specific and avoid using this when possible)"}
